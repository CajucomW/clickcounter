{"ast":null,"code":"var _jsxFileName = \"/home/cajucomw/Documents/projects/clickcounter/clickcounter/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Button from './components/Button/Button.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // object syntax\n      clicked: 0,\n      tapped: 0\n    };\n\n    this.clickCounter = () => {\n      console.log('getting clicked');\n      let numberOfClicks = this.state.clicked; // putting clicked in a variable\n\n      console.log('number of clicks', numberOfClicks);\n      this.setState({\n        clicked: numberOfClicks + 1\n      }); // set the state to reflect the change in number\n    };\n\n    this.tapCounter = () => {\n      console.log('getting tapped');\n      let numberOfTaps = this.state.tapped; // putting tapped in a variable\n\n      console.log('number of taps', numberOfTaps);\n      this.setState({\n        tapped: numberOfTaps + 1\n      }); // setting the state to reflect changes in 'tapped'\n    };\n  }\n\n  render() {\n    // keep the STATE in this parent component (App.js)\n    // the child component 'Button' calls the Method that applies +1\n    // parents give children PROPS\n    // this is the only way parents and children communicate\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Click Counter\"), React.createElement(Button, {\n      text: \"Click\",\n      selected: this.clickCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Button, {\n      text: \"Tap\",\n      selected: this.tapCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.clicked), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.tapped));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/cajucomw/Documents/projects/clickcounter/clickcounter/src/App.js"],"names":["React","Component","Button","App","state","clicked","tapped","clickCounter","console","log","numberOfClicks","setState","tapCounter","numberOfTaps","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBG,KAFwB,GAEhB;AACR;AACEC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,MAAM,EAAE;AAHF,KAFgB;;AAAA,SAQxBC,YARwB,GAQT,MAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAIC,cAAc,GAAG,KAAKN,KAAL,CAAWC,OAAhC,CAFiB,CAGjB;;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,cAAhC;AACA,WAAKC,QAAL,CAAc;AACVN,QAAAA,OAAO,EAAEK,cAAc,GAAG;AADhB,OAAd,EANiB,CASjB;AACH,KAlBuB;;AAAA,SAoBxBE,UApBwB,GAoBX,MAAM;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,UAAII,YAAY,GAAG,KAAKT,KAAL,CAAWE,MAA9B,CAFe,CAGf;;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BI,YAA9B;AACA,WAAKF,QAAL,CAAc;AACVL,QAAAA,MAAM,EAAEO,YAAY,GAAG;AADb,OAAd,EANe,CASf;AAEH,KA/BuB;AAAA;;AAkCxBC,EAAAA,MAAM,GAAG;AACT;AACA;AACA;AACA;AAEE,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,QAAQ,EAAE,KAAKP,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAcE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,QAAQ,EAAE,KAAKK,UAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,KAAL,CAAWC,OADd,CAvBF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWE,MADd,CA5BF,CADF;AAmCD;;AA3EuB;;AA8E5B,eAAeH,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from './components/Button/Button.js'\n\nclass App extends Component {\n    // react specific 'STATE'\n    state = {\n    // object syntax\n      clicked: 0,\n      tapped: 0,\n    }\n    \n    clickCounter = () => {\n        console.log('getting clicked');\n        let numberOfClicks = this.state.clicked;\n        // putting clicked in a variable\n        \n        console.log('number of clicks', numberOfClicks);\n        this.setState({\n            clicked: numberOfClicks + 1,\n        });\n        // set the state to reflect the change in number\n    }\n    \n    tapCounter = () => {\n        console.log('getting tapped');\n        let numberOfTaps = this.state.tapped;\n        // putting tapped in a variable\n        \n        console.log('number of taps', numberOfTaps);\n        this.setState({\n            tapped: numberOfTaps + 1,\n        });\n        // setting the state to reflect changes in 'tapped'\n        \n    }\n\n\n    render() {\n    // keep the STATE in this parent component (App.js)\n    // the child component 'Button' calls the Method that applies +1\n    // parents give children PROPS\n    // this is the only way parents and children communicate\n    \n      return (\n        <div className=\"App\">\n          <h1>Click Counter</h1>\n          \n          <Button\n            text=\"Click\"\n            selected={this.clickCounter} />\n          {/* the 'text' and 'selected' properties above */}\n          {/* are sent to the Button child component to use */}\n          {/* clickCounter Method is used on in the 'selected' prop*/}\n          {/* to pass down to the child component */}\n          {/* which activates the onClick event */}\n          \n          <br />\n          \n          <Button\n            text=\"Tap\"\n            selected={this.tapCounter} />\n          {/* the 'text' and 'selected' properties above */}\n          {/* are sent to the Button child component to use */}\n          {/* tapCounter Method is used on in the 'selected' prop*/}\n          {/* to pass down to the child component */}\n          {/* which activates the onClick event */}\n            \n          <p>\n            {this.state.clicked}\n            {/* this line of code shows the number of times clicked */}\n          </p>\n          \n          <p>\n            {this.state.tapped}\n            {/* this line of code shows the number of times tapped */}\n          </p>\n        </div>\n      );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}